#*************************************************************************************************************
#* IMPACT                                                                                                    *
#* by Rolf Henniger, Institute of Fluid Dynamics, ETH Zurich (henniger@ifd.mavt.ethz.ch)                     *
#* Mai 2005 - Dec 2011                                                                                       *
#* modified by Barna Becsek, ARTORG Center, University of Bern (barna.becsek@artorg.unibe.ch                 *
#* October 2015                                                                                              *
# GPU targets by Hadi Zolfaghari, ARTORG Center, University of Bern, (zolfaghari.haadi@gmail.com)            *
#* October 2015 - March 2020                                                                                 *
#*************************************************************************************************************

#####################################################################
#####################################################################
###                                                               ###
###    please do not edit this file, use the Makefile instead!    ###
###                                                               ###
#####################################################################
#####################################################################


#--- compilation flags ---







FLAG1 = $(OPT1) $(INCL) $(PRE) -J$(DST)
FLAG2 = $(OPT2) $(INCL) $(PRE) -J$(DST)


ifdef IMPACT_TESTING
   FLAG1 += $(FFLAGS)
   FLAG2 += $(FFLAGS)
endif

#--- dependencies of the mod-files and usr-files ---
#
#	M1  mod_dims:       --
#	M2  mod_vars:       mod_dims
#       M3  mod_exchange:   mod_dims, mod_vars
#       M4  mod_diff:       mod_dims, mod_vars, mod_exchange
#       M5  mod_coeffs:     mod_dims, mod_vars, mod_exchange, mod_diff
#       M6  mod_laplace:    mod_dims, mod_vars, mod_exchange, mod_diff
#       M7  mod_helmholtz:  mod_dims, mod_vars, mod_exchange, mod_diff
#       M8  mod_lib:        mod_dims, mod_vars, mod_exchange, mod_diff     , mod_coeffs
#	M9  mod_setup:      mod_dims, mod_vars
#       M10 mod_inout:      mod_dims, mod_vars, mod_exchange, mod_lib
#       M11 mod_test:       mod_dims, mod_vars, mod_exchange               , mod_helmholtz, mod_laplace
#       M12 mod_les:        mod_dims, mod_vars, mod_diff
#       M13 mod_solvers:    mod_dims, mod_vars, mod_exchange, mod_diff     , mod_helmholtz, mod_laplace, mod_inout
#       M14 mod_particles   mod_dims, mod_vars, mod_exchange
#       M15 mod_geometry:   mod_dims, mod_vars
#       M16 mod_rhs:        mod_dims, mod_vars, mod_diff
#       M17 mod_timeint:    mod_dims, mod_vars, mod_exchange, mod_diff     , mod_inout    , mod_coeffs , mod_lib  , mod_rhs, mod_solvers, mod_ibm
#       M14 mod_ibm:        mod_dims, mod_vars,                                                          mod_lib 
#
#	U1  usr_vars:       mod_*
#	U2  usr_func:       mod_*, usr_vars
#	U3  usr_config:     mod_*, usr_vars, usr_func
#       U4  usr_geometry:   mod_*, usr_vars, usr_func
#       U5  usr_force:      mod_*, usr_vars, usr_func
#       U6  usr_boundcond:  mod_*, usr_vars, usr_func
#       U7  usr_initcond:   mod_*, usr_vars, usr_func
#       U8  usr_stats:      mod_*, usr_vars, usr_func
#       U9  usr_post:       mod_*, usr_vars, usr_func, usr_stats



#--- name of the executable ---
NAME = impact
EXE  = $(NAME).exe

#--- objects and subunits ---
OBJ   = $(NAME).o

MOD1  = mod_dims
MOD2  = mod_vars
MOD3  = mod_exchange
MOD4  = mod_diff
MOD5  = mod_coeffs
MOD6  = mod_laplace
MOD8  = mod_lib
MOD9  = mod_setup
MOD10 = mod_inout
MOD11 = mod_test
MOD13 = mod_solvers
MOD14 = mod_ibm
MOD15 = mod_geometry
MOD16 = mod_rhs
MOD17 = mod_timeint
MOD18 = mod_cudafor
MOD19 = mod_vars_GPU
MOD20 = mod_mem_GPU
MOD21 = mod_sharp_interface_ibm
SUB1  = sub_other

ifeq (1,1)

MOD   = $(DST)/$(MOD1).o  $(DST)/$(MOD2).o  $(DST)/$(MOD3).o  $(DST)/$(MOD4).o \
        $(DST)/$(MOD5).o  $(DST)/$(MOD6).o  \
        $(DST)/$(MOD8).o  $(DST)/$(MOD9).o  $(DST)/$(MOD10).o $(DST)/$(MOD11).o  \
        $(DST)/$(MOD13).o  $(DST)/$(MOD15).o $(DST)/$(MOD16).o \
        $(DST)/$(MOD17).o $(DST)/$(MOD19).o $(DST)/$(MOD20).o $(DST)/$(SUB1).o
else

MOD   = $(DST)/$(MOD1).o  $(DST)/$(MOD2).o  $(DST)/$(MOD3).o  $(DST)/$(MOD4).o \
        $(DST)/$(MOD5).o  $(DST)/$(MOD6).o  \
        $(DST)/$(MOD8).o  $(DST)/$(MOD9).o  $(DST)/$(MOD10).o $(DST)/$(MOD11).o  \
        $(DST)/$(MOD13).o  $(DST)/$(MOD15).o $(DST)/$(MOD16).o \
        $(DST)/$(MOD17).o $(DST)/$(MOD19).o $(DST)/$(SUB1).o

endif

USR1  = usr_vars
USR2  = usr_func
USR3  = usr_config
USR4  = usr_geometry
USR5  = usr_force
USR6  = usr_boundcond
USR7  = usr_initcond
USR8  = usr_stats
USR9  = usr_post


USR   = $(DST)/$(USR1).o  $(DST)/$(USR2).o  $(DST)/$(USR3).o  $(DST)/$(USR4).o \
        $(DST)/$(USR5).o  $(DST)/$(USR6).o  \
        $(DST)/$(USR7).o  $(DST)/$(USR8).o  $(DST)/$(USR9).o 


ifeq (1,2)

FUNC  = cudaLaunch

Kernel1 = gradient_kernel
HOST1  = grad_host

Kernel2 = jacobi_kernel
HOST2  =  jacobi_mg_relaxation_host

Kernel3 = divergence_kernel
HOST3 = divergence_host

Kernel5 = interpolate2_pre_vel_kernel
HOST5 =  interpolate2_pre_vel_host

Kernel6 = helmholtz_explicit_kernel
HOST6 =  helmholtz_explicit_host

Kernel7 = axpby_kernel
HOST7 = axpby_host

Kernel8 = interpolate2_vel_pre_kernel
HOST8 =  interpolate2_vel_pre_host

Kernel9 = product_dg_relax_kernel
HOST9 =  product_dg_relax_host


Kernel10 = Nonlinear_upwind_kernel
HOST10 =   Nonlinear_upwind_host

Kernel11 = divergence2_kernel
HOST11 =   divergence2_host

Kernel12= jor_kernel_v2
HOST12= jacobi_solver_host_v4
aux_kernel = get_ghost


CUDAOBJ1 = $(DST)/$(HOST1).o  $(DST)/$(Kernel1).o $(DST)/$(MOD18).o  $(DST)/$(FUNC).o
CUDAOBJ2 = $(DST)/$(HOST2).o  $(DST)/$(Kernel2).o  
CUDAOBJ3 = $(DST)/$(HOST3).o  $(DST)/$(Kernel3).o  
#CUDAOBJ4 = $(DST)/$(HOST4).o  $(DST)/$(Kernel4).o  
CUDAOBJ5 = $(DST)/$(HOST5).o  $(DST)/$(Kernel5).o  
CUDAOBJ6 = $(DST)/$(HOST6).o  $(DST)/$(Kernel6).o  
CUDAOBJ7 = $(DST)/$(HOST7).o  $(DST)/$(Kernel7).o  
CUDAOBJ8 = $(DST)/$(HOST8).o  $(DST)/$(Kernel8).o 
CUDAOBJ9 = $(DST)/$(HOST9).o  $(DST)/$(Kernel9).o 
CUDAOBJ10 = $(DST)/$(HOST10).o  $(DST)/$(Kernel10).o 
CUDAOBJ11 = $(DST)/$(HOST11).o  $(DST)/$(Kernel11).o 
CUDAOBJ12 = $(DST)/$(HOST12).o   $(DST)/$(Kernel12).o $(DST)/$(aux_kernel).o $(DST)/$(aux_kernel2).o 


CUDAOBJ = $(CUDAOBJ1) $(CUDAOBJ2) $(CUDAOBJ3) $(CUDAOBJ5) $(CUDAOBJ6) $(CUDAOBJ7) $(CUDAOBJ8) $(CUDAOBJ9) $(CUDAOBJ10)  $(CUDAOBJ11) $(CUDAOBJ12)

endif

#ifdef CUDA_TEST

Kernel1 = gradient_kernel
Kernel_Launcher1 = gradient_kernel_launcher
HOST1  = grad_host

Kernel3 = divergence_kernel
Kernel_Launcher3 = divergence_kernel_launcher
HOST3 = divergence_host

Kernel5 = interpolate2_pre_vel_kernel
Kernel_Launcher5 = interpolate2_pre_vel_kernel_launcher
HOST5 = interpolate2_pre_vel_host

Kernel8 = interpolate2_vel_pre_kernel
Kernel_Launcher8 = interpolate2_vel_pre_kernel_launcher
HOST8 = interpolate2_vel_pre_host

Kernel6 = helmholtz_explicit_kernel
Kernel_Launcher6 = helmholtz_explicit_kernel_launcher
HOST6 = helmholtz_explicit_host

Kernel10 = Nonlinear_upwind_kernel
Kernel_Launcher10 = Nonlinear_upwind_kernel_launcher
HOST10 =   Nonlinear_upwind_host

Kernel11 = divergence2_kernel
Kernel_Launcher11 = divergence2_kernel_launcher
HOST11 =   divergence2_host

Kernel7 = axpby_kernel
Kernel_Launcher7 = axpby_kernel_launcher
HOST7 = axpby_host

Kernel12= jor_kernel_v2
Kernel_Launcher12 = jor_kernel_launcher
HOST12= jacobi_solver_host_v4
aux_kernel = get_ghost
aux_kernel_Launcher = get_ghost_launcher
aux_kernel2 = set_pressure_BC_kernel
aux_kernel_Launcher2 = set_pressure_BC_kernel_launcher


Kernel2 = jacobi_kernel
Kernel_Launcher2 = jacobi_kernel_launcher
HOST2  =  jacobi_mg_relaxation_host


Kernel9 = product_dg_relax_kernel
Kernel_Launcher9 = product_dg_relax_kernel_launcher
HOST9 =  product_dg_relax_host

CUDAOBJ1 = $(DST)/$(HOST1).o $(DST)/$(Kernel_Launcher1).o $(DST)/$(MOD18).o
CUDAOBJ3 = $(DST)/$(HOST3).o $(DST)/$(Kernel_Launcher3).o
CUDAOBJ5 = $(DST)/$(HOST5).o $(DST)/$(Kernel_Launcher5).o
CUDAOBJ8 = $(DST)/$(HOST8).o $(DST)/$(Kernel_Launcher8).o
CUDAOBJ6 = $(DST)/$(HOST6).o $(DST)/$(Kernel_Launcher6).o
CUDAOBJ10 = $(DST)/$(HOST10).o $(DST)/$(Kernel_Launcher10).o
CUDAOBJ11 = $(DST)/$(HOST11).o $(DST)/$(Kernel_Launcher11).o
CUDAOBJ7 = $(DST)/$(HOST7).o $(DST)/$(Kernel_Launcher7).o
CUDAOBJ12 = $(DST)/$(HOST12).o  $(DST)/$(Kernel_Launcher12).o $(DST)/$(aux_kernel_Launcher).o $(DST)/$(aux_kernel_Launcher2).o
CUDAOBJ2 = $(DST)/$(HOST2).o $(DST)/$(Kernel_Launcher2).o
CUDAOBJ9 = $(DST)/$(HOST9).o $(DST)/$(Kernel_Launcher9).o
CUDAOBJ = $(CUDAOBJ1) $(CUDAOBJ3) $(CUDAOBJ5) $(CUDAOBJ8) $(CUDAOBJ6) $(CUDAOBJ10) $(CUDAOBJ11) $(CUDAOBJ7) $(CUDAOBJ12) $(CUDAOBJ2) $(CUDAOBJ9)

#endif


##############################################################################################################
### compilation ##############################################################################################
##############################################################################################################


ifeq ($(CUSR),FALSE)


#--- dependencies and compilation of the EXECUTABLE ---
ifeq (1,1)

build:  $(DST)/$(OBJ) $(CUDAOBJ) $(MOD) $(USR)  
	$(COMP) -rdynamic -o $(DST)/$(EXE) $(FLAG1) $(CUDAOBJ) $(MOD) $(USR) $(DST)/$(OBJ) $(LIBS) $(LIBCUDA) 
	ar rcs $(DST)/lib$(NAME).a $(MOD) $(USR)
else

build:  $(DST)/$(OBJ) $(MOD) $(USR)  
	$(COMP) -rdynamic -o $(DST)/$(EXE) $(FLAG1) $(MOD) $(USR) $(DST)/$(OBJ) $(LIBS) 
	ar rcs $(DST)/lib$(NAME).a $(MOD) $(USR)
endif
#--- dependencies and compilation of the OBJECT ---


ifeq (1,1)
$(DST)/$(OBJ):  $(CUDAOBJ) $(MOD)  $(USR) $(NAME).f90
	$(COMP) -o $(DST)/$(NAME).o $(FLAG2) -c $(NAME).f90
else
$(DST)/$(OBJ):  $(MOD)  $(USR) $(NAME).f90
	$(COMP) -o $(DST)/$(NAME).o $(FLAG2) -c $(NAME).f90
endif
#--- dependencies and compilation of the MODULES ---

$(DST)/$(MOD1).o:  $(MOD1).f90
	$(COMP) -o $(DST)/$(MOD1).o $(FLAG2) -c $(MOD1).f90

$(DST)/$(MOD2).o:  $(DST)/$(MOD1).o $(MOD2).f90
	$(COMP) -o $(DST)/$(MOD2).o $(FLAG2) -c $(MOD2).f90

$(DST)/$(MOD3).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD19).o $(MOD3).f90
	$(COMP) -o $(DST)/$(MOD3).o $(FLAG2) -c $(MOD3).f90

$(DST)/$(MOD4).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD19).o $(MOD4).f90
	$(COMP) -o $(DST)/$(MOD4).o $(FLAG2) -c $(MOD4).f90

$(DST)/$(MOD5).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(MOD5).f90
	$(COMP) -o $(DST)/$(MOD5).o $(FLAG2) -c $(MOD5).f90

$(DST)/$(MOD6).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(DST)/$(MOD19).o $(MOD6).f90
	$(COMP) -o $(DST)/$(MOD6).o $(FLAG2) -c $(MOD6).f90

$(DST)/$(MOD8).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(DST)/$(MOD5).o $(MOD8).f90
	$(COMP) -o $(DST)/$(MOD8).o $(FLAG2) -c $(MOD8).f90

$(DST)/$(MOD9).o:  $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD8).o $(DST)/$(MOD19).o $(MOD9).f90
	$(COMP) -o $(DST)/$(MOD9).o $(FLAG2) -c $(MOD9).f90

$(DST)/$(MOD10).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD8).o $(MOD10).f90
	$(COMP) -o $(DST)/$(MOD10).o $(FLAG2) -c $(MOD10).f90

$(DST)/$(MOD11).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(DST)/$(MOD6).o $(MOD11).f90
	$(COMP) -o $(DST)/$(MOD11).o $(FLAG2) -c $(MOD11).f90

$(DST)/$(MOD13).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(DST)/$(MOD6).o $(DST)/$(MOD10).o $(DST)/$(MOD19).o $(DST)/$(MOD8).o $(DST)/$(USR2).o $(MOD13).f90 
	$(COMP) -o $(DST)/$(MOD13).o $(FLAG2) -c $(MOD13).f90

$(DST)/$(MOD14).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD8).o $(MOD14).f90
	$(COMP) -o $(DST)/$(MOD14).o $(FLAG2) -c $(MOD14).f90

$(DST)/$(MOD15).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(MOD15).f90
	$(COMP) -o $(DST)/$(MOD15).o $(FLAG2) -c $(MOD15).f90

$(DST)/$(MOD16).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD4).o $(MOD16).f90
	$(COMP) -o $(DST)/$(MOD16).o $(FLAG2) -c $(MOD16).f90

$(DST)/$(MOD17).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD3).o $(DST)/$(MOD4).o $(DST)/$(MOD5).o $(DST)/$(MOD8).o $(DST)/$(MOD10).o $(DST)/$(MOD11).o $(DST)/$(MOD13).o $(DST)/$(MOD16).o $(DST)/$(MOD19).o $(DST)/$(USR2).o  $(MOD17).f90
	$(COMP) -o $(DST)/$(MOD17).o $(FLAG2) -c $(MOD17).f90

$(DST)/$(MOD18).o: $(NVSRC)/$(MOD18).f90
	$(COMP) -o $(DST)/$(MOD18).o -c $(NVSRC)/$(MOD18).f90

$(DST)/$(MOD19).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD18).o  $(NVSRC)/$(MOD19).f90
	$(COMP) -o $(DST)/$(MOD19).o $(FLAG2) -c $(NVSRC)/$(MOD19).f90
#ifeq (1,2)
$(DST)/$(MOD20).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD18).o $(DST)/$(MOD19).o $(NVSRC)/$(MOD20).f90
	$(COMP) -o $(DST)/$(MOD20).o $(FLAG2) -c $(NVSRC)/$(MOD20).f90
#endif

$(DST)/$(MOD21).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o  $(NVSRC)/$(MOD21).f90
	$(COMP) -o $(DST)/$(MOD21).o $(FLAG2) -c $(NVSRC)/$(MOD21).f90

$(DST)/$(SUB1).o: $(SUB1).f90
	$(COMP) -o $(DST)/$(SUB1).o $(FLAG2) -c $(SUB1).f90



$(DST)/$(USR1).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(USR1).f90
	$(COMP) -o $(DST)/$(USR1).o $(FLAG2) -c $(USR1).f90

$(DST)/$(USR2).o: $(DST)/$(MOD1).o $(DST)/$(MOD2).o $(DST)/$(MOD8).o $(DST)/$(MOD4).o $(DST)/$(MOD3).o $(DST)/$(USR1).o $(USR2).f90
	$(COMP) -o $(DST)/$(USR2).o $(FLAG2) -c $(USR2).f90

$(DST)/$(USR3).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR3).f90
	$(COMP) -o $(DST)/$(USR3).o $(FLAG2) -c $(USR3).f90

$(DST)/$(USR4).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR4).f90
	$(COMP) -o $(DST)/$(USR4).o $(FLAG2) -c $(USR4).f90

$(DST)/$(USR5).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR5).f90
	$(COMP) -o $(DST)/$(USR5).o $(FLAG2) -c $(USR5).f90

$(DST)/$(USR6).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR6).f90
	$(COMP) -o $(DST)/$(USR6).o $(FLAG2) -c $(USR6).f90

$(DST)/$(USR7).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR7).f90
	$(COMP) -o $(DST)/$(USR7).o $(FLAG2) -c $(USR7).f90

$(DST)/$(USR8).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR8).f90
	$(COMP) -o $(DST)/$(USR8).o $(FLAG2) -c $(USR8).f90

$(DST)/$(USR9).o: $(MOD) $(DST)/$(USR1).o $(DST)/$(USR2).o $(DST)/$(USR8).o $(USR9).f90
	$(COMP) -o $(DST)/$(USR9).o $(FLAG2) -c $(USR9).f90
##############################################################################################################
#ifdef CUDA_TEST
#$(DST)/$(Kernel1).o:  $(NVSRC)/$(Kernel1).cu
#	$(NVCC) -c  $(NVSRC)/$(Kernel1).cu -o $(DST)/$(Kernel1).o
$(DST)/$(Kernel_Launcher1).o:  $(NVSRC)/$(Kernel_Launcher1).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher1).cu -o $(DST)/$(Kernel_Launcher1).o
$(DST)/$(HOST1).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher1).o  $(NVSRC)/$(HOST1).f90
	$(COMP) -o $(DST)/$(HOST1).o  $(FLAG2) -c  $(NVSRC)/$(HOST1).f90
$(DST)/$(Kernel_Launcher3).o:  $(NVSRC)/$(Kernel_Launcher3).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher3).cu -o $(DST)/$(Kernel_Launcher3).o
$(DST)/$(HOST3).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher3).o  $(NVSRC)/$(HOST3).f90
	$(COMP) -o $(DST)/$(HOST3).o  $(FLAG2) -c  $(NVSRC)/$(HOST3).f90
$(DST)/$(Kernel_Launcher5).o:  $(NVSRC)/$(Kernel_Launcher5).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher5).cu -o $(DST)/$(Kernel_Launcher5).o
$(DST)/$(HOST5).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher5).o  $(NVSRC)/$(HOST5).f90
	$(COMP) -o $(DST)/$(HOST5).o  $(FLAG2) -c  $(NVSRC)/$(HOST5).f90
$(DST)/$(Kernel_Launcher8).o:  $(NVSRC)/$(Kernel_Launcher8).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher8).cu -o $(DST)/$(Kernel_Launcher8).o
$(DST)/$(HOST8).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher8).o  $(NVSRC)/$(HOST8).f90
	$(COMP) -o $(DST)/$(HOST8).o  $(FLAG2) -c  $(NVSRC)/$(HOST8).f90
$(DST)/$(Kernel_Launcher6).o:  $(NVSRC)/$(Kernel_Launcher6).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher6).cu -o $(DST)/$(Kernel_Launcher6).o
$(DST)/$(HOST6).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher6).o  $(NVSRC)/$(HOST6).f90
	$(COMP) -o $(DST)/$(HOST6).o  $(FLAG2) -c  $(NVSRC)/$(HOST6).f90
$(DST)/$(Kernel_Launcher10).o:  $(NVSRC)/$(Kernel_Launcher10).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher10).cu -o $(DST)/$(Kernel_Launcher10).o
$(DST)/$(HOST10).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher10).o  $(NVSRC)/$(HOST10).f90
	$(COMP) -o $(DST)/$(HOST10).o  $(FLAG2) -c  $(NVSRC)/$(HOST10).f90
$(DST)/$(Kernel_Launcher11).o:  $(NVSRC)/$(Kernel_Launcher11).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher11).cu -o $(DST)/$(Kernel_Launcher11).o
$(DST)/$(HOST11).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher11).o  $(NVSRC)/$(HOST11).f90
	$(COMP) -o $(DST)/$(HOST11).o  $(FLAG2) -c  $(NVSRC)/$(HOST11).f90
$(DST)/$(Kernel_Launcher7).o:  $(NVSRC)/$(Kernel_Launcher7).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher7).cu -o $(DST)/$(Kernel_Launcher7).o
$(DST)/$(HOST7).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher7).o  $(NVSRC)/$(HOST7).f90
	$(COMP) -o $(DST)/$(HOST7).o  $(FLAG2) -c  $(NVSRC)/$(HOST7).f90
$(DST)/$(Kernel_Launcher12).o:  $(NVSRC)/$(Kernel_Launcher12).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher12).cu -o $(DST)/$(Kernel_Launcher12).o
$(DST)/$(aux_kernel_Launcher).o:  $(NVSRC)/$(aux_kernel_Launcher).cu
	$(NVCC) -c  $(NVSRC)/$(aux_kernel_Launcher).cu -o $(DST)/$(aux_kernel_Launcher).o
$(DST)/$(aux_kernel_Launcher2).o:  $(NVSRC)/$(aux_kernel_Launcher2).cu
	$(NVCC) -c  $(NVSRC)/$(aux_kernel_Launcher2).cu -o $(DST)/$(aux_kernel_Launcher2).o
$(DST)/$(HOST12).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher12).o  $(DST)/$(USR2).o  $(NVSRC)/$(HOST12).f90
	$(COMP) -o $(DST)/$(HOST12).o  $(FLAG2) -c  $(NVSRC)/$(HOST12).f90
$(DST)/$(Kernel_Launcher2).o:  $(NVSRC)/$(Kernel_Launcher2).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher2).cu -o $(DST)/$(Kernel_Launcher2).o
$(DST)/$(HOST2).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher2).o  $(NVSRC)/$(HOST2).f90
	$(COMP) -o $(DST)/$(HOST2).o  $(FLAG2) -c  $(NVSRC)/$(HOST2).f90
$(DST)/$(Kernel_Launcher9).o:  $(NVSRC)/$(Kernel_Launcher9).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel_Launcher9).cu -o $(DST)/$(Kernel_Launcher9).o
$(DST)/$(HOST9).o: $(MOD) $(DST)/$(MOD18).o $(DST)/$(Kernel_Launcher9).o  $(NVSRC)/$(HOST9).f90
	$(COMP) -o $(DST)/$(HOST9).o  $(FLAG2) -c  $(NVSRC)/$(HOST9).f90
#endif


ifeq (1,2)
$(DST)/$(FUNC).o:  $(NVSRC)/$(FUNC).cu
	$(NVCC) -c $(FUNC).cu -o $(DST)/$(FUNC).o

$(DST)/$(Kernel1).o:  $(NVSRC)/$(Kernel1).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel1).cu -o $(DST)/$(Kernel1).o
$(DST)/$(HOST1).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST1).f90
	$(COMP) -o $(DST)/$(HOST1).o  $(FLAG2) -c  $(NVSRC)/$(HOST1).f90

$(DST)/$(Kernel2).o:  $(NVSRC)/$(Kernel2).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel2).cu -o $(DST)/$(Kernel2).o
$(DST)/$(HOST2).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST2).f90
	$(COMP) -o $(DST)/$(HOST2).o  $(FLAG2) -c  $(NVSRC)/$(HOST2).f90

$(DST)/$(Kernel3).o:  $(NVSRC)/$(Kernel3).cu
	$(NVCC) -c $(NVSRC)/$(Kernel3).cu -o $(DST)/$(Kernel3).o
$(DST)/$(HOST3).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST3).f90
	$(COMP) -o $(DST)/$(HOST3).o  $(FLAG2) -c  $(NVSRC)/$(HOST3).f90

#$(DST)/$(Kernel4).o: $(NVSRC)/$(Kernel4).cu
#	$(NVCC) -c   $(NVSRC)/$(Kernel4).cu -o $(DST)/$(Kernel4).o
#$(DST)/$(HOST4).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST4).f90
#	$(COMP) -o $(DST)/$(HOST4).o  $(FLAG2) -c  $(NVSRC)/$(HOST4).f90

$(DST)/$(Kernel5).o:  $(NVSRC)/$(Kernel5).cu
	$(NVCC) -c   $(NVSRC)/$(Kernel5).cu -o $(DST)/$(Kernel5).o
$(DST)/$(HOST5).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST5).f90
	$(COMP) -o $(DST)/$(HOST5).o  $(FLAG2) -c  $(NVSRC)/$(HOST5).f90

$(DST)/$(Kernel6).o: $(NVSRC)/$(Kernel6).cu
	$(NVCC) -c  $(NVSRC)/$(Kernel6).cu -o $(DST)/$(Kernel6).o
$(DST)/$(HOST6).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST6).f90
	$(COMP) -o $(DST)/$(HOST6).o  $(FLAG2) -c  $(NVSRC)/$(HOST6).f90

$(DST)/$(Kernel7).o: $(NVSRC)/$(Kernel7).cu
	$(NVCC) -c $(NVSRC)/$(Kernel7).cu -o $(DST)/$(Kernel7).o
$(DST)/$(HOST7).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST7).f90
	$(COMP) -o $(DST)/$(HOST7).o  $(FLAG2) -c  $(NVSRC)/$(HOST7).f90

$(DST)/$(Kernel8).o: $(NVSRC)/$(Kernel8).cu
	$(NVCC) -c $(NVSRC)/$(Kernel8).cu -o $(DST)/$(Kernel8).o
$(DST)/$(HOST8).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST8).f90
	$(COMP) -o $(DST)/$(HOST8).o  $(FLAG2) -c  $(NVSRC)/$(HOST8).f90

$(DST)/$(Kernel9).o: $(NVSRC)/$(Kernel9).cu
	$(NVCC) -c $(NVSRC)/$(Kernel9).cu -o $(DST)/$(Kernel9).o
$(DST)/$(HOST9).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST9).f90
	$(COMP) -o $(DST)/$(HOST9).o  $(FLAG2) -c  $(NVSRC)/$(HOST9).f90

$(DST)/$(Kernel10).o: $(NVSRC)/$(Kernel10).cu
	$(NVCC) -c $(NVSRC)/$(Kernel10).cu -o $(DST)/$(Kernel10).o
$(DST)/$(HOST10).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST10).f90
	$(COMP) -o $(DST)/$(HOST10).o  $(FLAG2) -c  $(NVSRC)/$(HOST10).f90

$(DST)/$(Kernel11).o: $(NVSRC)/$(Kernel11).cu
	$(NVCC) -c $(NVSRC)/$(Kernel11).cu -o $(DST)/$(Kernel11).o
$(DST)/$(HOST11).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST11).f90
	$(COMP) -o $(DST)/$(HOST11).o  $(FLAG2) -c  $(NVSRC)/$(HOST11).f90

$(DST)/$(Kernel12).o: $(NVSRC)/$(Kernel12).cu
	$(NVCC) -c $(NVSRC)/$(Kernel12).cu -o $(DST)/$(Kernel12).o
$(DST)/$(aux_kernel).o: $(NVSRC)/$(aux_kernel).cu
	$(NVCC) -c $(NVSRC)/$(aux_kernel).cu -o $(DST)/$(aux_kernel).o
$(DST)/$(HOST12).o: $(MOD) $(DST)/$(MOD18).o  $(NVSRC)/$(HOST12).f90
	$(COMP) -o $(DST)/$(HOST12).o  $(FLAG2) -c  $(NVSRC)/$(HOST12).f90
endif

else


#--- dependencies and compilation of the EXECUTABLE ---

build:  $(DST)/$(OBJ)  $(USR)
	$(COMP) -o $(DST)/$(EXE) $(FLAG1) $(MOD) $(USR) $(DST)/$(OBJ) $(LIBS) $(DST)/


#--- dependencies and compilation of the OBJECT ---

$(DST)/$(OBJ): $(USR) $(NAME).f90
	$(COMP) -o $(DST)/$(NAME).o $(FLAG2) -c $(NAME).f90


#--- dependencies and compilation of the MODULES ---

$(DST)/$(USR1).o: $(USR1).f90
	$(COMP) -o $(DST)/$(USR1).o $(FLAG2) -c $(USR1).f90

$(DST)/$(USR2).o: $(DST)/$(USR1).o $(USR2).f90
	$(COMP) -o $(DST)/$(USR2).o $(FLAG2) -c $(USR2).f90

$(DST)/$(USR3).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR3).f90
	$(COMP) -o $(DST)/$(USR3).o $(FLAG2) -c $(USR3).f90

$(DST)/$(USR4).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR4).f90
	$(COMP) -o $(DST)/$(USR4).o $(FLAG2) -c $(USR4).f90

$(DST)/$(USR5).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR5).f90
	$(COMP) -o $(DST)/$(USR5).o $(FLAG2) -c $(USR5).f90

$(DST)/$(USR6).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR6).f90
	$(COMP) -o $(DST)/$(USR6).o $(FLAG2) -c $(USR6).f90

$(DST)/$(USR7).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR7).f90
	$(COMP) -o $(DST)/$(USR7).o $(FLAG2) -c $(USR7).f90

$(DST)/$(USR8).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(USR8).f90
	$(COMP) -o $(DST)/$(USR8).o $(FLAG2) -c $(USR8).f90

$(DST)/$(USR9).o: $(DST)/$(USR1).o $(DST)/$(USR2).o $(DST)/$(USR8).o $(USR9).f90
	$(COMP) -o $(DST)/$(USR9).o $(FLAG2) -c $(USR9).f90


endif

##############################################################################################################




#--- command aliases ---

ifeq ($(CUSR),FALSE)

clean:
	rm -f $(DST)/*.o $(DST)/*h5 $(DST)/*.mod $(DST)/$(EXE)

else

clean:
	rm -f $(DST)/usr_*.o $(DST)/usr_*.mod $(DST)/$(NAME).o $(DST)/$(EXE)

endif
